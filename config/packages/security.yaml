security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        administrators:
            memory:
                users:
                    enola: { password: '$2y$13$y7IlQ/JiW4F1PAPl/6MnAemznBPuhwacVrRWt8URSxWIkCMxC/pPy', roles: ['ROLE_ADMIN'] }
            
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            json_login:
                check_path: api_login
            logout:
                path: api_logout
                
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_GOD]
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/admin/users, roles: ROLE_SUPER_ADMIN }
        - { path: ^/api/(users)/\d+$, roles: ROLE_USER}
        - { path: ^/api/(bookmarks)/\d+$, roles: ROLE_ADMIN, methods: [DELETE] }
        - { path: ^/api/(users)/\d+$, roles: ROLE_SUPER_ADMIN, methods: [DELETE] }
        - { path: ^/api/(users)/\d+$, roles: ROLE_ADMIN, methods: [PUT] }
        - { path: ^/api/users, roles: ROLE_ADMIN, methods: [POST] }


when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
